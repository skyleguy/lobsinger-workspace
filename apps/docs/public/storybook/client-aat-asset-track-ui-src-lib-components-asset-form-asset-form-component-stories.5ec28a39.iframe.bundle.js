"use strict";(self.webpackChunklob=self.webpackChunklob||[]).push([[989],{"./libs/client/aat/asset-track/ui/src/lib/components/asset-form/asset-form.component.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Primary:()=>Primary,__namedExportsOrder:()=>__namedExportsOrder,default:()=>asset_form_component_stories});var tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.mjs"),core=__webpack_require__("./node_modules/@angular/core/fesm2022/core.mjs"),resource=__webpack_require__("./node_modules/@angular/core/fesm2022/resource.mjs"),debug_node=__webpack_require__("./node_modules/@angular/core/fesm2022/debug_node.mjs"),fesm2022_forms=__webpack_require__("./node_modules/@angular/forms/fesm2022/forms.mjs"),primeng_button=__webpack_require__("./node_modules/primeng/fesm2022/primeng-button.mjs"),primeng_floatlabel=__webpack_require__("./node_modules/primeng/fesm2022/primeng-floatlabel.mjs"),primeng_fluid=__webpack_require__("./node_modules/primeng/fesm2022/primeng-fluid.mjs"),primeng_inputgroup=__webpack_require__("./node_modules/primeng/fesm2022/primeng-inputgroup.mjs"),primeng_inputgroupaddon=__webpack_require__("./node_modules/primeng/fesm2022/primeng-inputgroupaddon.mjs"),primeng_inputtext=__webpack_require__("./node_modules/primeng/fesm2022/primeng-inputtext.mjs"),primeng_progressspinner=__webpack_require__("./node_modules/primeng/fesm2022/primeng-progressspinner.mjs"),primeng_select=__webpack_require__("./node_modules/primeng/fesm2022/primeng-select.mjs");let AssetFormComponent=class AssetFormComponent{allRoomOptions=["Family Room","Bedroom","Living Room","Dining Room","Basement","Office"];isLocationLoading=(0,core.input)(!1);isFormLoading=(0,core.input)(!1);currentLocation=(0,core.input)();setUp=(0,core.output)();pickUp=(0,core.output)();return=(0,core.output)();assign=(0,core.output)();isAddressInputTouched=(0,core.output)();currentAddressControl=new fesm2022_forms.MJ("",{validators:[fesm2022_forms.k0.required]});roomLocationControl=new fesm2022_forms.MJ("",{validators:[fesm2022_forms.k0.required]});assetForm=new fesm2022_forms.gE({currentAddress:this.currentAddressControl,roomLocation:this.roomLocationControl});filteredRoomOptions=[];constructor(){(0,resource.QZ)(()=>{const address=this.currentLocation();address?.data?this.currentAddressControl.setValue(address?.data):address?.error&&this.currentAddressControl.markAsTouched()})}convertFormToPayload(){return{currentAddress:this.assetForm.value.currentAddress??"",roomLocation:this.assetForm.value.roomLocation??""}}resetForm(){this.assetForm.patchValue({currentAddress:this.currentLocation()?.data??"",roomLocation:null}),this.assetForm.markAsPristine()}search(event){this.filteredRoomOptions=event.query?this.allRoomOptions.filter(option=>option.toLowerCase().includes(event.query.toLowerCase())):[...this.allRoomOptions]}static ctorParameters=()=>[];static propDecorators={isLocationLoading:[{type:debug_node.pde,args:[{isSignal:!0,alias:"isLocationLoading",required:!1,transform:void 0}]}],isFormLoading:[{type:debug_node.pde,args:[{isSignal:!0,alias:"isFormLoading",required:!1,transform:void 0}]}],currentLocation:[{type:debug_node.pde,args:[{isSignal:!0,alias:"currentLocation",required:!1,transform:void 0}]}],setUp:[{type:debug_node.k7i,args:["setUp"]}],pickUp:[{type:debug_node.k7i,args:["pickUp"]}],return:[{type:debug_node.k7i,args:["return"]}],assign:[{type:debug_node.k7i,args:["assign"]}],isAddressInputTouched:[{type:debug_node.k7i,args:["isAddressInputTouched"]}]}};AssetFormComponent=(0,tslib_es6.Cg)([(0,debug_node.uAl)({selector:"aat-asset-track-ui-asset-form",imports:[primeng_progressspinner.df,fesm2022_forms.X1,primeng_inputtext.um,primeng_floatlabel.fV,primeng_fluid.Hk,primeng_inputgroup.I0,primeng_inputgroupaddon.kx,primeng_button.tm,primeng_select.py],changeDetection:debug_node.Ngq.OnPush,template:'\n    <form class="relative flex flex-col gap-3">\n      @if (isFormLoading()) {\n        <div class="absolute inset-0 bg-black/5 z-50 flex justify-center items-center">\n          <p-progress-spinner />\n        </div>\n      }\n      <p-fluid class="flex flex-col gap-3">\n        <div>\n          <p-inputgroup>\n            @if (currentLocation()?.loading) {\n              <p-inputgroup-addon>\n                <i class="fa-solid fa-spin fa-spinner"></i>\n              </p-inputgroup-addon>\n            }\n            <p-floatlabel variant="in">\n              <input\n                pInputText\n                id="address"\n                [formControl]="currentAddressControl"\n                autocomplete="off"\n                (focus)="isAddressInputTouched.emit(true)"\n              />\n              <label for="address">\n                @if (currentLocation()?.loading) {\n                  Estimating Address...\n                } @else {\n                  Asset Address\n                }\n              </label>\n            </p-floatlabel>\n          </p-inputgroup>\n          @if (currentLocation()?.error) {\n            <small class="text-red-500">Error getting address, please enter manually</small>\n          } @else if (currentLocation()?.loading || currentLocation()?.data) {\n            <small class="whitespace-nowrap">Edit if estimate is not correct.</small>\n          }\n        </div>\n        <p-floatlabel variant="in">\n          <p-select\n            [formControl]="roomLocationControl"\n            inputId="room_location"\n            [options]="allRoomOptions"\n            [invalid]="roomLocationControl.touched && !roomLocationControl.valid"\n            appendTo="body"\n          />\n          <label for="room_location">Room Location</label>\n        </p-floatlabel>\n      </p-fluid>\n      <div class="w-full flex justify-center items-center gap-3 pb-3 flex-wrap">\n        <button\n          pButton\n          label="Assign"\n          icon="text-xl fa-solid fa-clipboard-list"\n          [disabled]="isFormLoading()"\n          title="Assign asset to yourself"\n          class="flex-auto"\n          (click)="assign.emit()"\n          type="button"\n          [outlined]="true"\n          [rounded]="true"\n        ></button>\n        <button\n          pButton\n          label="Set Up"\n          icon="text-xl fa-solid fa-stopwatch"\n          [disabled]="assetForm.invalid || isFormLoading()"\n          title="Set up this asset at the address indicated in the form"\n          class="flex-auto"\n          (click)="setUp.emit(convertFormToPayload())"\n          type="button"\n          [outlined]="true"\n          [rounded]="true"\n        ></button>\n        <button\n          pButton\n          label="Pick Up"\n          icon="text-xl fa-solid fa-cloud-arrow-up"\n          [disabled]="isFormLoading()"\n          title="Pick up this asset from client location"\n          class="flex-auto"\n          (click)="pickUp.emit()"\n          type="button"\n          [outlined]="true"\n          [rounded]="true"\n        ></button>\n        <button\n          pButton\n          label="Return"\n          icon="text-xl fa-solid fa-home"\n          [disabled]="isFormLoading()"\n          title="Return this asset to the office"\n          class="flex-auto"\n          (click)="return.emit()"\n          type="button"\n          [outlined]="true"\n          [rounded]="true"\n        ></button>\n      </div>\n    </form>\n  '}),(0,tslib_es6.Sn)("design:paramtypes",[])],AssetFormComponent);const asset_form_component_stories={component:AssetFormComponent,title:"AssetFormComponent"},Primary={args:{}},__namedExportsOrder=["Primary"]}}]);