{
    "pipes": [],
    "interfaces": [
        {
            "name": "ErrorConfig",
            "id": "interface-ErrorConfig-1216df1d2d9dfa75f71c2db04344cf285855f6fa05292fab1ac4af751379be38f05a2cb05e480a75c92427ff08233f5711ec8f7aa10ac2308063af75d003045d",
            "file": "libs/client/shared/layout/ui/src/lib/app-container/app-container.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Component, effect, input, signal } from '@angular/core';\nimport { toSignal } from '@angular/core/rxjs-interop';\nimport { MatIcon } from '@angular/material/icon';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { debounceTime, fromEvent, map, startWith } from 'rxjs';\n\nimport { TabMenuItem } from '@lob/client/shared/layout/data';\n\nimport { TabMenuComponent } from '../tab-menu/tab-menu.component';\n\ninterface ErrorConfig {\n  icon: 'error' | 'warning';\n  primaryMessage: string;\n  secondaryMessage?: string;\n}\n\n@Component({\n  selector: 'shared-layout-ui-app-container',\n  imports: [MatIcon, MatTabsModule, TabMenuComponent],\n  styles: [\n    `\n      .scale-3 {\n        transform: scale(3);\n        transform-origin: center;\n      }\n    `\n  ],\n  template: `\n    <div class=\"w-screen flex flex-col\" [style.height]=\"deviceHeight() + 'px'\">\n      @if (isHeaderAvailable()) {\n        <nav id=\"header\" class=\"shrink flex items-center justify-between\">\n          <ng-content select=\"[nav]\"></ng-content>\n        </nav>\n      }\n      @if (errorConfig(); as errorConfig) {\n        <div class=\"grow flex flex-col items-center justify-center p-5 gap-5\">\n          <mat-icon class=\"scale-3 mb-3\">{{ errorConfig.icon }}</mat-icon>\n          <div class=\"flex flex-col justify-center items-center\">\n            <h4 class=\"!m-0\">{{ errorConfig.primaryMessage }}</h4>\n            <h6 class=\"!m-0\">{{ errorConfig.secondaryMessage }}</h6>\n          </div>\n          <ng-content select=\"[errorExtra]\"></ng-content>\n        </div>\n      } @else {\n        <div class=\"grow flex min-h-0\">\n          @if (isSidebarAvailable()) {\n            <div id=\"sidebar\" class=\"shrink p-3 border-r-2 border-black\">\n              <ng-content select=\"[sidebar]\"></ng-content>\n            </div>\n          }\n          <div class=\"flex flex-col grow\">\n            <div id=\"main-content\" class=\"grow\" [class.overflow-y-auto]=\"isMainBodyScrollable()\">\n              <ng-content select=\"[main-content]\"></ng-content>\n            </div>\n            @if (tabs()) {\n              <shared-layout-ui-tab-menu class=\"shrink\" [tabs]=\"tabs()\" />\n            }\n          </div>\n        </div>\n      }\n    </div>\n  `\n})\nexport class AppContainerComponent {\n  protected readonly deviceHeight = toSignal(\n    fromEvent(window, 'resize').pipe(\n      startWith(window.innerHeight),\n      debounceTime(200),\n      map(() => window.innerHeight)\n    )\n  );\n\n  isSidebarAvailable = input(true);\n  isMainBodyScrollable = input(true);\n  isHeaderAvailable = input(true);\n  tabs = input<TabMenuItem[]>();\n\n  protected errorConfig = signal<ErrorConfig | null>(null);\n\n  constructor() {\n    effect(() => {\n      console.log(this.tabs());\n    });\n  }\n\n  public setError(errorConfig: ErrorConfig) {\n    this.errorConfig.set(errorConfig);\n  }\n\n  public clearError() {\n    this.errorConfig.set(null);\n  }\n}\n",
            "properties": [
                {
                    "name": "icon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"error\" | \"warning\"",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "primaryMessage",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "secondaryMessage",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 14
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        }
    ],
    "injectables": [],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [],
    "components": [
        {
            "name": "AppContainerComponent",
            "id": "component-AppContainerComponent-1216df1d2d9dfa75f71c2db04344cf285855f6fa05292fab1ac4af751379be38f05a2cb05e480a75c92427ff08233f5711ec8f7aa10ac2308063af75d003045d",
            "file": "libs/client/shared/layout/ui/src/lib/app-container/app-container.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "shared-layout-ui-app-container",
            "styleUrls": [],
            "styles": [
                "\n      .scale-3 {\n        transform: scale(3);\n        transform-origin: center;\n      }\n    "
            ],
            "template": "<div class=\"w-screen flex flex-col\" [style.height]=\"deviceHeight() + 'px'\">\n  @if (isHeaderAvailable()) {\n    <nav id=\"header\" class=\"shrink flex items-center justify-between\">\n      <ng-content select=\"[nav]\"></ng-content>\n    </nav>\n  }\n  @if (errorConfig(); as errorConfig) {\n    <div class=\"grow flex flex-col items-center justify-center p-5 gap-5\">\n      <mat-icon class=\"scale-3 mb-3\">{{ errorConfig.icon }}</mat-icon>\n      <div class=\"flex flex-col justify-center items-center\">\n        <h4 class=\"!m-0\">{{ errorConfig.primaryMessage }}</h4>\n        <h6 class=\"!m-0\">{{ errorConfig.secondaryMessage }}</h6>\n      </div>\n      <ng-content select=\"[errorExtra]\"></ng-content>\n    </div>\n  } @else {\n    <div class=\"grow flex min-h-0\">\n      @if (isSidebarAvailable()) {\n        <div id=\"sidebar\" class=\"shrink p-3 border-r-2 border-black\">\n          <ng-content select=\"[sidebar]\"></ng-content>\n        </div>\n      }\n      <div class=\"flex flex-col grow\">\n        <div id=\"main-content\" class=\"grow\" [class.overflow-y-auto]=\"isMainBodyScrollable()\">\n          <ng-content select=\"[main-content]\"></ng-content>\n        </div>\n        @if (tabs()) {\n          <shared-layout-ui-tab-menu class=\"shrink\" [tabs]=\"tabs()\" />\n        }\n      </div>\n    </div>\n  }\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "isHeaderAvailable",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 75,
                    "required": false
                },
                {
                    "name": "isMainBodyScrollable",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 74,
                    "required": false
                },
                {
                    "name": "isSidebarAvailable",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 73,
                    "required": false
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "deviceHeight",
                    "defaultValue": "toSignal(\n    fromEvent(window, 'resize').pipe(\n      startWith(window.innerHeight),\n      debounceTime(200),\n      map(() => window.innerHeight)\n    )\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 65,
                    "modifierKind": [
                        124,
                        148
                    ]
                },
                {
                    "name": "errorConfig",
                    "defaultValue": "signal<ErrorConfig | null>(null)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 78,
                    "modifierKind": [
                        124
                    ]
                },
                {
                    "name": "isHeaderAvailable",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 75,
                    "required": false
                },
                {
                    "name": "isMainBodyScrollable",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 74,
                    "required": false
                },
                {
                    "name": "isSidebarAvailable",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 73,
                    "required": false
                },
                {
                    "name": "tabs",
                    "defaultValue": "input<TabMenuItem[]>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 76
                }
            ],
            "methodsClass": [
                {
                    "name": "clearError",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 90,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "setError",
                    "args": [
                        {
                            "name": "errorConfig",
                            "type": "ErrorConfig",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 86,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "errorConfig",
                            "type": "ErrorConfig",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "MatIcon"
                },
                {
                    "name": "MatTabsModule",
                    "type": "module"
                },
                {
                    "name": "TabMenuComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, effect, input, signal } from '@angular/core';\nimport { toSignal } from '@angular/core/rxjs-interop';\nimport { MatIcon } from '@angular/material/icon';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { debounceTime, fromEvent, map, startWith } from 'rxjs';\n\nimport { TabMenuItem } from '@lob/client/shared/layout/data';\n\nimport { TabMenuComponent } from '../tab-menu/tab-menu.component';\n\ninterface ErrorConfig {\n  icon: 'error' | 'warning';\n  primaryMessage: string;\n  secondaryMessage?: string;\n}\n\n@Component({\n  selector: 'shared-layout-ui-app-container',\n  imports: [MatIcon, MatTabsModule, TabMenuComponent],\n  styles: [\n    `\n      .scale-3 {\n        transform: scale(3);\n        transform-origin: center;\n      }\n    `\n  ],\n  template: `\n    <div class=\"w-screen flex flex-col\" [style.height]=\"deviceHeight() + 'px'\">\n      @if (isHeaderAvailable()) {\n        <nav id=\"header\" class=\"shrink flex items-center justify-between\">\n          <ng-content select=\"[nav]\"></ng-content>\n        </nav>\n      }\n      @if (errorConfig(); as errorConfig) {\n        <div class=\"grow flex flex-col items-center justify-center p-5 gap-5\">\n          <mat-icon class=\"scale-3 mb-3\">{{ errorConfig.icon }}</mat-icon>\n          <div class=\"flex flex-col justify-center items-center\">\n            <h4 class=\"!m-0\">{{ errorConfig.primaryMessage }}</h4>\n            <h6 class=\"!m-0\">{{ errorConfig.secondaryMessage }}</h6>\n          </div>\n          <ng-content select=\"[errorExtra]\"></ng-content>\n        </div>\n      } @else {\n        <div class=\"grow flex min-h-0\">\n          @if (isSidebarAvailable()) {\n            <div id=\"sidebar\" class=\"shrink p-3 border-r-2 border-black\">\n              <ng-content select=\"[sidebar]\"></ng-content>\n            </div>\n          }\n          <div class=\"flex flex-col grow\">\n            <div id=\"main-content\" class=\"grow\" [class.overflow-y-auto]=\"isMainBodyScrollable()\">\n              <ng-content select=\"[main-content]\"></ng-content>\n            </div>\n            @if (tabs()) {\n              <shared-layout-ui-tab-menu class=\"shrink\" [tabs]=\"tabs()\" />\n            }\n          </div>\n        </div>\n      }\n    </div>\n  `\n})\nexport class AppContainerComponent {\n  protected readonly deviceHeight = toSignal(\n    fromEvent(window, 'resize').pipe(\n      startWith(window.innerHeight),\n      debounceTime(200),\n      map(() => window.innerHeight)\n    )\n  );\n\n  isSidebarAvailable = input(true);\n  isMainBodyScrollable = input(true);\n  isHeaderAvailable = input(true);\n  tabs = input<TabMenuItem[]>();\n\n  protected errorConfig = signal<ErrorConfig | null>(null);\n\n  constructor() {\n    effect(() => {\n      console.log(this.tabs());\n    });\n  }\n\n  public setError(errorConfig: ErrorConfig) {\n    this.errorConfig.set(errorConfig);\n  }\n\n  public clearError() {\n    this.errorConfig.set(null);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "\n      .scale-3 {\n        transform: scale(3);\n        transform-origin: center;\n      }\n    \n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 78
            },
            "extends": []
        },
        {
            "name": "TabMenuComponent",
            "id": "component-TabMenuComponent-4b352c7979171027aa1ea94646ec58c123ea6db8a13d582489dc354bba6c2fc08c1b05b703b3fdaa4cdeed635d58c00f31791608b7391a61e329147652130e28",
            "file": "libs/client/shared/layout/ui/src/lib/tab-menu/tab-menu.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "shared-layout-ui-tab-menu",
            "styleUrls": [],
            "styles": [
                "\n    .scale-image {\n      transform: scale(1.33);\n      transform-origin: center;\n    }\n  "
            ],
            "template": "<nav class=\"flex justify-evenly items-center p-3 h-24 border-2 border-t-[#DCDFE1]\">\n  @for (tab of tabs(); track tab.label) {\n    <a class=\"p-3 relative\" [routerLink]=\"tab.link\" routerLinkActive (isActiveChange)=\"isActiveTabChange($event, tab)\" matRipple>\n      <div class=\"flex flex-col items-center justify-center gap-1 text-[#8F959A]\" routerLinkActive=\"!text-[#41454A]\">\n        <div class=\"w-16 h-8 flex justify-center items-center rounded-2xl\" routerLinkActive=\"!bg-[#A1C56B] border-[1px] border-black\">\n          <mat-icon [fontSet]=\"activeTabMenuItem() === tab ? '' : 'material-icons-outlined'\" class=\"scale-image\">{{\n            tab.icon\n          }}</mat-icon>\n        </div>\n        <span>\n          {{ tab.label }}\n        </span>\n      </div>\n    </a>\n  }\n</nav>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "activeTabMenuItem",
                    "defaultValue": "signal<TabMenuItem | null>(null)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 40
                },
                {
                    "name": "tabs",
                    "defaultValue": "input<TabMenuItem[]>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 38
                }
            ],
            "methodsClass": [
                {
                    "name": "isActiveTabChange",
                    "args": [
                        {
                            "name": "isActive",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "tab",
                            "type": "TabMenuItem",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 42,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "isActive",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "tab",
                            "type": "TabMenuItem",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "RouterLink"
                },
                {
                    "name": "RouterLinkActive"
                },
                {
                    "name": "MatIcon"
                },
                {
                    "name": "MatRippleModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, input, signal } from '@angular/core';\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatIcon } from '@angular/material/icon';\nimport { RouterLink, RouterLinkActive } from '@angular/router';\n\nimport { TabMenuItem } from '@lob/client/shared/layout/data';\n\n@Component({\n  selector: 'shared-layout-ui-tab-menu',\n  imports: [RouterLink, RouterLinkActive, MatIcon, MatRippleModule],\n  styles: `\n    .scale-image {\n      transform: scale(1.33);\n      transform-origin: center;\n    }\n  `,\n  template: `\n    <nav class=\"flex justify-evenly items-center p-3 h-24 border-2 border-t-[#DCDFE1]\">\n      @for (tab of tabs(); track tab.label) {\n        <a class=\"p-3 relative\" [routerLink]=\"tab.link\" routerLinkActive (isActiveChange)=\"isActiveTabChange($event, tab)\" matRipple>\n          <div class=\"flex flex-col items-center justify-center gap-1 text-[#8F959A]\" routerLinkActive=\"!text-[#41454A]\">\n            <div class=\"w-16 h-8 flex justify-center items-center rounded-2xl\" routerLinkActive=\"!bg-[#A1C56B] border-[1px] border-black\">\n              <mat-icon [fontSet]=\"activeTabMenuItem() === tab ? '' : 'material-icons-outlined'\" class=\"scale-image\">{{\n                tab.icon\n              }}</mat-icon>\n            </div>\n            <span>\n              {{ tab.label }}\n            </span>\n          </div>\n        </a>\n      }\n    </nav>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class TabMenuComponent {\n  tabs = input<TabMenuItem[]>();\n\n  activeTabMenuItem = signal<TabMenuItem | null>(null);\n\n  isActiveTabChange(isActive: boolean, tab: TabMenuItem) {\n    if (isActive) {\n      this.activeTabMenuItem.set(tab);\n    }\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "\n    .scale-image {\n      transform: scale(1.33);\n      transform-origin: center;\n    }\n  \n",
            "extends": []
        }
    ],
    "modules": [],
    "miscellaneous": {
        "variables": [
            {
                "name": "config",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/client/shared/layout/ui/.storybook/main.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StorybookConfig",
                "defaultValue": "{\n  stories: ['../**/*.@(mdx|stories.@(js|jsx|ts|tsx))'],\n  addons: ['@storybook/addon-essentials', '@storybook/addon-interactions'],\n  framework: {\n    name: '@storybook/angular',\n    options: {}\n  },\n  docs: {\n    autodocs: true,\n    defaultName: 'Docs'\n  }\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/client/shared/layout/ui/src/lib/tab-menu/tab-menu.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/tab-menu works!/gi)).toBeTruthy();\n  }\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/client/shared/layout/ui/src/lib/tab-menu/tab-menu.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<TabMenuComponent>",
                "defaultValue": "{\n  component: TabMenuComponent,\n  title: 'TabMenuComponent',\n  decorators: [\n    applicationConfig({\n      providers: [provideRouter([])]\n    }),\n    moduleMetadata({\n      imports: [MatIcon]\n    })\n  ]\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/client/shared/layout/ui/src/lib/tab-menu/tab-menu.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    tabs: [\n      {\n        icon: 'home',\n        label: 'Home',\n        link: 'home'\n      }\n    ]\n  }\n}"
            }
        ],
        "functions": [],
        "typealiases": [
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<TabMenuComponent>",
                "file": "libs/client/shared/layout/ui/src/lib/tab-menu/tab-menu.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            }
        ],
        "enumerations": [],
        "groupedVariables": {
            "libs/client/shared/layout/ui/.storybook/main.ts": [
                {
                    "name": "config",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/client/shared/layout/ui/.storybook/main.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StorybookConfig",
                    "defaultValue": "{\n  stories: ['../**/*.@(mdx|stories.@(js|jsx|ts|tsx))'],\n  addons: ['@storybook/addon-essentials', '@storybook/addon-interactions'],\n  framework: {\n    name: '@storybook/angular',\n    options: {}\n  },\n  docs: {\n    autodocs: true,\n    defaultName: 'Docs'\n  }\n}"
                }
            ],
            "libs/client/shared/layout/ui/src/lib/tab-menu/tab-menu.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/client/shared/layout/ui/src/lib/tab-menu/tab-menu.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/tab-menu works!/gi)).toBeTruthy();\n  }\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/client/shared/layout/ui/src/lib/tab-menu/tab-menu.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<TabMenuComponent>",
                    "defaultValue": "{\n  component: TabMenuComponent,\n  title: 'TabMenuComponent',\n  decorators: [\n    applicationConfig({\n      providers: [provideRouter([])]\n    }),\n    moduleMetadata({\n      imports: [MatIcon]\n    })\n  ]\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/client/shared/layout/ui/src/lib/tab-menu/tab-menu.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    tabs: [\n      {\n        icon: 'home',\n        label: 'Home',\n        link: 'home'\n      }\n    ]\n  }\n}"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {
            "libs/client/shared/layout/ui/src/lib/tab-menu/tab-menu.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<TabMenuComponent>",
                    "file": "libs/client/shared/layout/ui/src/lib/tab-menu/tab-menu.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ]
        }
    },
    "routes": [],
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": "libs/client/shared/layout/ui/.storybook/main.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "config",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/client/shared/layout/ui/src/lib/app-container/app-container.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppContainerComponent",
                "coveragePercent": 0,
                "coverageCount": "0/13",
                "status": "low"
            },
            {
                "filePath": "libs/client/shared/layout/ui/src/lib/app-container/app-container.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ErrorConfig",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "libs/client/shared/layout/ui/src/lib/tab-menu/tab-menu.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/client/shared/layout/ui/src/lib/tab-menu/tab-menu.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/client/shared/layout/ui/src/lib/tab-menu/tab-menu.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/client/shared/layout/ui/src/lib/tab-menu/tab-menu.component.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/client/shared/layout/ui/src/lib/tab-menu/tab-menu.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TabMenuComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            }
        ]
    }
}